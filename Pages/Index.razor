@page "/"
@using Newtonsoft.Json;
@using Orders;

<PageTitle>BobaShop</PageTitle>

@foreach (var Drink in ProductList)
{
	<div>
		<h1>@Drink.Name</h1>
		<button @onclick="() => add(Drink.Name)">+</button><h2>$@Drink.Price</h2><button @onclick="() => decrease(Drink.Name)">-</button>
	</div>
}
@foreach (var product in orderedProducts)
{
	<h3>@product.ProductName ordered: @product.Count</h3>
}
<button @onclick="()=> FinalAddOrder()">BUY</button>



@code {
	public class Product
	{
		public string Name;
		public int Price;
		public Product(string name, int price)
		{
			Name = name;
			Price = price;
		}
	}

	public List<OrderedProduct> orderedProducts = new();

	public void add(string productname)
	{
		if (!isExist(productname))
		{
			orderedProducts.Add(new OrderedProduct(){ProductName = productname});
			GetExistedProduct(productname).Count++;
		}
		else
		{
			GetExistedProduct(productname).Count++;
		}
	}

	public void decrease(string productname)
	{
		if (isExist(productname))
		{
			GetExistedProduct(productname).Count--;
			if (GetExistedProduct(productname).Count <= 0)
				orderedProducts.Remove(GetExistedProduct(productname));
		}
	}

	public OrderedProduct GetExistedProduct(string productname)
	{
		foreach (var product in orderedProducts)
			if (product.ProductName == productname)
				return product;
		return null;
	}

	public bool isExist(string productname)
	{
		foreach (var product in orderedProducts)
			if (product.ProductName == productname)
				return true;
		return false;
	}

	List<Product> ProductList = new()
	{
		new Product("milktea",50),
		new Product("coffee",40)
	};

	async Task FinalAddOrder()
	{
		string orderjson = JsonConvert.SerializeObject(orderedProducts);
		using HttpClient client = new HttpClient();
		var result = await client.PostAsync("https://localhost:7104/api/Values", new StringContent(orderjson, System.Text.Encoding.UTF8, "application/json"));
		Console.WriteLine(await result.Content.ReadAsStringAsync());
	}
}